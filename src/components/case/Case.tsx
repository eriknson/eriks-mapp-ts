import React, { Component } from 'react';
import { Route } from 'react-router-dom';
import ScrollToTop from '../misc/scroll/ScrollToTop';
import Emoji from '../misc/emoji/Emoji';
import AnimatedGallery from '../misc/gallery/AnimatedGallery';
//import VideoComponent from '../misc/video/VideoComponent';
//import ReactPlayer from 'react-player';

type CaseProps = {
  metadata: any;
};

export default class Case extends Component<CaseProps> {
  _goBack(): ((event: React.MouseEvent<HTMLInputElement>) => void) | any {
    window.history.back();
  }

  render() {
    return (
      <div className="case">
        <ScrollToTop />

        <div className="case-back-button">
          <button className="case-back-button-title" onClick={this._goBack}>
            <Emoji symbol="üëàüèº" label="back" />
          </button>
        </div>

        <h1>{this.props.metadata.company}</h1>
        <h2>{this.props.metadata.title}</h2>
        <div className="case-p">
          <p>{this.props.metadata.introDescription1}</p>
          <p>{this.props.metadata.introDescription2}</p>
        </div>
        <Route path="/flow" component={CaseSpecificFlow} />
        <Route path="/ibm-marketing" component={CaseSpecificIBM} />
        <Route path="/jip" component={CaseSpecificCabonline} />
        <Route path="/vasaloppet" component={CaseSpecificVasaloppet} />
        <Route path="/ibm-summer-internship" component={CaseSpecificMetro} />
        <Route path="/vex" component={CaseSpecificVEX} />
      </div>
    );
  }
}

const CaseSpecificFlow = () => {
  return (
    <div>
      <div className="case-image">
        <img
          className="case-image-img"
          key="axel-whiteboard"
          alt="img"
          src={require('../../assets/axel-whiteboard.jpg')}
        />
      </div>
      <div className="case-p">
        <p>
          Vi gillade dem direkt och b√∂rjade skissa id√©er. Efter en del bollande
          fram och tillbaka med v√•r √§mnesgranskare, Kristiaan Pelckmans, landade
          vi att djupdyka i Graph Mining. M√•let blev att (1) ta fram en pipeline
          som processar kollektivtrafikdatan (GTFS-datan) till att passa in i en
          fl√∂desn√§tverks-modell f√∂r att (2) kunna identifiera vilka str√§ckor som
          dels √§r s√•rbara f√∂r avbrott (flaskhalsar), och dels riskerar att
          desintegrera stora delar av n√§tet vid ett potentiellt avbrott.
        </p>
        <p>
          Slutligen testar vi v√•r modell p√• riktig data fr√•n Uppsalas
          kollektivtrafikn√§t, UL, och visualiserar delar av resultatet i ett
          kart-gr√§nssnitt vi tog fram (Mapbox, React).
        </p>
      </div>
      <AnimatedGallery parentCaseURL="anomali" />
      <div className="case-image">
        <img
          className="case-image-img"
          key="vasaloppet"
          alt="img"
          src={require('../../assets/anomali_ss.png')}
        />
      </div>
      <div className="case-p">
        <p>
          Massa Python Notebooks och fix i GCP senare s√• lyckas vi extrahera,
          processa och analysera 3.5M datapunkter (arrivals) fr√•n UL-n√§tet.
        </p>
        <p>
          Resultatet √§r dels (1) ett objektivt index som beskriver hur mycket
          varje str√§ckning i ett kollektivtrafikn√§t avviker fr√•n tidtabell i en
          grafkontext. Och dels (2) en metod f√∂r att identifiera, och
          visualisera, de mest utsatta str√§ckorna i n√§tet, med hj√§lp av en
          algoritm som heter MINCUT-MAXFLOW.
        </p>
        <p>
          En prioritet genom projektet har varit att utforma allt s√• att man ska
          kunna byta ut och importera data fr√•n andra n√§t eller tidsintervall ‚Äì
          s√• l√§nge RAW-datan f√∂ljer Google's GTFS-standard.
        </p>
      </div>
      <div className="case-image">
        <img
          className="case-image-img"
          key="vasaloppet"
          alt="img"
          src={require('../../assets/anomali_pman.png')}
        />
      </div>
      <div className="case-p">
        <p>
          Halvv√§gs in i projektet tog COVID-19 √∂ver Sverige och v√•rt nya hem
          blev Google Hangouts. Vi vill verkligen tacka Kristiaan Pelckmans
          (√§mnesgranskare) och Jerry L√∂fvenhaft (handledare) som, trots
          omst√§ndigheterna, verkligen st√∂ttade oss under hela arbetet!
        </p>
        <p>
          H√§r nedan kan ni snart se hela v√•rt resultat. Projektet √§r allts√• inte
          helt f√§rdigt √§nnu, och inneh√•llet p√• l√§nken nedan √§r d.v.s. work in
          progress.
        </p>
      </div>
      <div className="case-image">
        <p>
          <strong>
            WIP:{' '}
            <u>
              <a
                href="https://eriknson.github.io/anomali/"
                target="_blank"
                rel="noopener noreferrer"
              >
                https://eriknson.github.io/anomali/
              </a>
            </u>
          </strong>
          <br />
        </p>
      </div>
    </div>
  );
};

const CaseSpecificIBM = () => {
  return (
    <div className="case-video-container">
      <div className="vimeo-iframe-container">
        <iframe
          className="vimeo-iframe"
          title="raghda"
          src="https://player.vimeo.com/video/467148969?loop=1&title=0&byline=0&portrait=0"
          frameBorder="0"
          allow="autoplay; fullscreen"
          allowFullScreen
        ></iframe>
      </div>
    </div>
  );
};

const CaseSpecificCabonline = () => {
  return (
    <div className="case-video-container">
      <div className="vimeo-iframe-container">
        <iframe
          className="vimeo-iframe"
          title="jip-got"
          src="https://player.vimeo.com/video/467150254?loop=1&title=0&byline=0&portrait=0"
          frameBorder="0"
          allow="autoplay; fullscreen"
          allowFullScreen
        ></iframe>
      </div>
      <div className="vimeo-iframe-container">
        <iframe
          className="vimeo-iframe"
          title="jip-crush"
          src="https://player.vimeo.com/video/467148708?loop=1&title=0&byline=0&portrait=0"
          frameBorder="0"
          allow="autoplay; fullscreen"
          allowFullScreen
        ></iframe>
      </div>
    </div>
  );
};

const CaseSpecificVasaloppet = () => {
  return (
    <div className="case-vasaloppet">
      <AnimatedGallery parentCaseURL="vasaloppet" />
      <div className="case-p">
        <p>
          Som Vasaloppsdeltagare s√∂kte man (elastiskt) med sitt f√∂r- och
          efternamn, och fick sen njuta av att se vilka bedrifter man (enligt
          v√•ra algoritmer) uppn√•tt under sina olika race och √•r. Vi ville visa
          att alla √•kare har massa roliga insikter dolda i resultatdatan. H√∂gt
          och l√•gt. L√§ttsamt och p√• allvar. Smidigt paketerat i en webbapp.
        </p>
        <p>
          Till exempel kunde vi bed√∂mma hur v√§l man disponerade sitt race
          gentemot topp√•kare, hur stark man var i upp- och nedf√∂rsbackar, hur
          man st√•r sig mot Gunde Svan, eller ifall man lyckades f√• till en
          imponerande sp√∂rt i m√•l. I referens mot alla √•kare, klubb, k√§ndisar
          eller din familj. <Emoji symbol="‚õ∑üìà" label="medals" />
        </p>
      </div>
      <div className="case-image">
        <img
          className="case-image-img"
          key="vasaloppet"
          alt="img"
          src={require('../../assets/vasaloppet-thumbnail-project.jpg')}
        />
      </div>
      <div className="case-p">
        <p>
          Vi ville att appen (klienten) skulle vara l√§tt, snabb och s√§ker. S√•
          alla algoritmer, ber√§kningar och lagring av personuppgifter
          levererades via endpoints p√• v√•r NodeJS-backend.
        </p>
        <p>
          En prioritering genom projektet var tillgodose alla Vasaloppets
          deltagare och ta fram tillr√§ckligt med medaljer f√∂r att s√§kerst√§lla
          att alla f√•r n√•got som passar just deras niv√• och m√•l. Vi landade p√•
          totalt 14 olika medaljtyper med tre niv√•er vardera ‚Äì brons, silver och
          guld <Emoji symbol="ü•âü•àü•á" label="medals" />
        </p>
      </div>
      <div className="case-image">
        <img
          className="case-image-img"
          key="vasaloppet"
          alt="img"
          src={require('../../assets/vasaloppet-techstack.jpg')}
        />
      </div>
      <p>
        Under huven (NodeJS) ber√§knades medaljerna fram med hj√§lp av relativa
        j√§mf√∂relser, olika kurvanpassningningar och klustring av racedatan. P√•
        n√•gon sekund genomf√∂rdes tusentals ber√§kningar vars resultat sedan
        levererades till klienten. <Emoji symbol="‚òÅÔ∏èüì≤" label="cloud" />
      </p>
    </div>
  );
};

const CaseSpecificMetro = () => {
  return (
    <div className="case-image">
      <img
        className="case-image-img"
        key="metrolive1"
        alt="img"
        src={require('../../assets/metrolive-img1.jpg')}
      />
      <img
        className="case-image-img"
        key="metrolive2"
        alt="img"
        src={require('../../assets/metrolive-img2.jpg')}
      />
      <img
        className="case-image-img"
        key="metrolive3"
        alt="img"
        src={require('../../assets/metrolive-img3.jpg')}
      />
    </div>
  );
};

const CaseSpecificVEX = () => {
  return (
    <div className="case-image">
      <p>
        <strong>
          Mer info{' '}
          <u>
            <a
              href="https://etablera.co/vex-challenge-the-norm"
              target="_blank"
              rel="noopener noreferrer"
            >
              h√§r
            </a>
          </u>
        </strong>
        <br />
        (bl√§ddra med piltangenterna)
      </p>
    </div>
  );
};
